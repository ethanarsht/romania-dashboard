filter(!str_detect(link, 'facebook.com')) %>%
mutate(
media = str_extract(link, '//.*?/'),
# media = str_extract(media, '\\..*\\.'),
) %>%
group_by(name, media) %>%
summarize(count = n()) %>%
ungroup()
links <- posts_raw %>%
filter(!str_detect(link, 'facebook.com')) %>%
mutate(
media = str_extract(link, '//.*?/'),
media = str_remove(media, ".*")
# media = str_extract(media, '\\..*\\.'),
) %>%
group_by(name, media) %>%
summarize(count = n()) %>%
ungroup()
links <- posts_raw %>%
filter(!str_detect(link, 'facebook.com')) %>%
mutate(
media = str_extract(link, '//.*?/'),
media = str_remove(media, "\\.*")
# media = str_extract(media, '\\..*\\.'),
) %>%
group_by(name, media) %>%
summarize(count = n()) %>%
ungroup()
links <- posts_raw %>%
filter(!str_detect(link, 'facebook.com')) %>%
mutate(
media = str_extract(link, '//.*?/'),
media = str_remove(media, "\\..*")
# media = str_extract(media, '\\..*\\.'),
) %>%
group_by(name, media) %>%
summarize(count = n()) %>%
ungroup()
links <- posts_raw %>%
filter(!str_detect(link, 'facebook.com')) %>%
mutate(
media = str_extract(link, '//.*?/'),
media = str_remove(media, "\\..*?")
# media = str_extract(media, '\\..*\\.'),
) %>%
group_by(name, media) %>%
summarize(count = n()) %>%
ungroup()
links <- posts_raw %>%
filter(!str_detect(link, 'facebook.com')) %>%
mutate(
media = str_extract(link, '//.*?/'),
# media = str_extract(media, '\\..*\\.'),
) %>%
group_by(name, media) %>%
summarize(count = n()) %>%
ungroup()
links <- posts_raw %>%
filter(!str_detect(link, 'facebook.com')) %>%
mutate(
media = str_extract(link, '//.*?/'),
media = str_remove_all(media, '\\/')
# media = str_extract(media, '\\..*\\.'),
) %>%
group_by(name, media) %>%
summarize(count = n()) %>%
ungroup()
links <- posts_raw %>%
filter(!str_detect(link, 'facebook.com')) %>%
mutate(
media = str_extract(link, '//.*?/'),
media = str_remove_all(media, '\\/|www\\.')
# media = str_extract(media, '\\..*\\.'),
) %>%
group_by(name, media) %>%
summarize(count = n()) %>%
ungroup()
links <- posts_raw %>%
filter(!str_detect(link, 'facebook.com')) %>%
mutate(
media = str_extract(link, '//.*?/'),
media = str_remove_all(media, '\\/|www\\.|\\.ro|\\.net|\\.com')
# media = str_extract(media, '\\..*\\.'),
) %>%
group_by(name, media) %>%
summarize(count = n()) %>%
ungroup()
runApp()
runApp()
g <- polls %>%
filter(`Fieldwork End` >= today - years(1)) %>%
ggplot(aes(x = `Fieldwork End`, y = result, color = party, group = party,
text = paste0('<b>Party:</b> ', party, '<br>',
'<b>Result:</b> ', result*100, '%')
)) +
geom_scatter() +
bbplot::bbc_style() +
labs(
title = 'Polling results: last 12 months'
) +
scale_y_continuous(labels = scales::percent) +
theme(
legend.position = "none"
) +
geom_smooth()
g <- polls %>%
filter(`Fieldwork End` >= (today - years(1))) %>%
ggplot(aes(x = `Fieldwork End`, y = result, color = party, group = party,
text = paste0('<b>Party:</b> ', party, '<br>',
'<b>Result:</b> ', result*100, '%')
)) +
geom_scatter() +
bbplot::bbc_style() +
labs(
title = 'Polling results: last 12 months'
) +
scale_y_continuous(labels = scales::percent) +
theme(
legend.position = "none"
) +
geom_smooth()
g <- polls %>%
filter(`Fieldwork End` >= (today() - years(1))) %>%
ggplot(aes(x = `Fieldwork End`, y = result, color = party, group = party,
text = paste0('<b>Party:</b> ', party, '<br>',
'<b>Result:</b> ', result*100, '%')
)) +
geom_scatter() +
bbplot::bbc_style() +
labs(
title = 'Polling results: last 12 months'
) +
scale_y_continuous(labels = scales::percent) +
theme(
legend.position = "none"
) +
geom_smooth()
g <- polls %>%
filter(`Fieldwork End` >= (today() - years(1))) %>%
ggplot(aes(x = `Fieldwork End`, y = result, color = party, group = party,
text = paste0('<b>Party:</b> ', party, '<br>',
'<b>Result:</b> ', result*100, '%')
)) +
geom_point() +
bbplot::bbc_style() +
labs(
title = 'Polling results: last 12 months'
) +
scale_y_continuous(labels = scales::percent) +
theme(
legend.position = "none"
) +
geom_smooth()
g
g <- polls %>%
filter(`Fieldwork End` >= (today() - years(1))) %>%
ggplot(aes(x = `Fieldwork End`, y = result, color = party, group = party,
text = paste0('<b>Party:</b> ', party, '<br>',
'<b>Result:</b> ', result*100, '%')
)) +
geom_point() +
bbplot::bbc_style() +
labs(
title = 'Polling results: last 12 months'
) +
scale_y_continuous(labels = scales::percent) +
theme(
legend.position = "none"
) +
geom_smooth(se = F)
plotly_output <- ggplotly(g, tooltip = c("text"))
plotly_output
c_map <- c(setNames(df_polls$color, df_polls$short_name))
df_polls <- polls %>%
left_join(df_party_names) %>%
filter(`Fieldwork End` >= (today() - years(1)))
polls
colnames(polls)
polls$party
View(df_party_names)
df_polls <- polls %>%
left_join(df_party_names, by = c('name' = 'party')) %>%
filter(`Fieldwork End` >= (today() - years(1)))
polls
df_polls <- polls %>%
left_join(df_party_names, by = c('party' = 'name')) %>%
filter(`Fieldwork End` >= (today() - years(1)))
df_polls
View(df_polls)
g <- ggplot(aes(x = `Fieldwork End`, y = result, color = party, group = party,
text = paste0('<b>Party:</b> ', party, '<br>',
'<b>Result:</b> ', result*100, '%')
)) +
geom_point() +
bbplot::bbc_style() +
labs(
title = 'Polling results: last 12 months'
) +
scale_y_continuous(labels = scales::percent) +
theme(
legend.position = "none"
) +
geom_smooth(se = F)
g <- ggplot(df_polls, aes(x = `Fieldwork End`, y = result, color = party, group = party,
text = paste0('<b>Party:</b> ', party, '<br>',
'<b>Result:</b> ', result*100, '%')
)) +
geom_point() +
bbplot::bbc_style() +
labs(
title = 'Polling results: last 12 months'
) +
scale_y_continuous(labels = scales::percent) +
theme(
legend.position = "none"
) +
geom_smooth(se = F)
plotly_output <- ggplotly(g, tooltip = c("text"))
plotly_output
g <- ggplot(df_polls, aes(x = `Fieldwork End`, y = result, color = party, group = party,
text = paste0('<b>Party:</b> ', party, '<br>',
'<b>Result:</b> ', result*100, '%')
)) +
geom_point(alpha = 0.25) +
bbplot::bbc_style() +
labs(
title = 'Polling results: last 12 months'
) +
scale_y_continuous(labels = scales::percent) +
theme(
legend.position = "none"
) +
geom_smooth(se = F)
plotly_output <- ggplotly(g, tooltip = c("text"))
plotly_output
g <- ggplot(df_polls, aes(x = `Fieldwork End`, y = result, color = party, group = party,
text = paste0('<b>Party:</b> ', party, '<br>',
'<b>Result:</b> ', result*100, '%')
)) +
geom_point(alpha = 0.5) +
bbplot::bbc_style() +
labs(
title = 'Polling results: last 12 months'
) +
scale_y_continuous(labels = scales::percent) +
theme(
legend.position = "none"
) +
geom_smooth(se = F)
plotly_output <- ggplotly(g, tooltip = c("text"))
g <- ggplot(df_polls, aes(x = `Fieldwork End`, y = result, color = party, group = party,
text = paste0('<b>Party:</b> ', party, '<br>',
'<b>Result:</b> ', result*100, '%')
)) +
geom_point(alpha = 0.5) +
bbplot::bbc_style() +
labs(
title = 'Polling results: last 12 months'
) +
scale_y_continuous(labels = scales::percent) +
theme(
legend.position = "none"
) +
geom_smooth(se = F, lw = 1)
?geom_smooth
g <- ggplot(df_polls, aes(x = `Fieldwork End`, y = result, color = party, group = party,
text = paste0('<b>Party:</b> ', party, '<br>',
'<b>Result:</b> ', result*100, '%')
)) +
geom_point(alpha = 0.5) +
bbplot::bbc_style() +
labs(
title = 'Polling results: last 12 months'
) +
scale_y_continuous(labels = scales::percent) +
theme(
legend.position = "none"
) +
geom_smooth(se = F, size = 2)
plotly_output <- ggplotly(g, tooltip = c("text"))
plotly_output
g <- ggplot(df_polls, aes(x = `Fieldwork End`, y = result, color = party, group = party,
text = paste0('<b>Party:</b> ', party, '<br>',
'<b>Result:</b> ', result*100, '%')
)) +
geom_point(alpha = 0.5) +
bbplot::bbc_style() +
labs(
title = 'Polling results: last 12 months'
) +
scale_y_continuous(labels = scales::percent) +
theme(
legend.position = "none"
) +
geom_smooth(se = F, size = .5)
plotly_output <- ggplotly(g, tooltip = c("text"))
plotly_output
runApp()
colnames(df_polls)
filter_list <- df_polls %>% filter(`Fieldwork End` == max(`Fieldwork End`))
View(filter_list)
filter_list <- df_polls %>% filter(`Fieldwork End` == max(`Fieldwork End`
& result > 0.05))
filter_list <- df_polls %>% filter(`Fieldwork End` == max(`Fieldwork End`)
& result >= .05)
df_polls <- df_polls %>% filter(party %in% filter_list)
df_polls <- df_polls %>% filter(party %in% filter_list$party)
df_polls <- polls %>%
left_join(df_party_names, by = c('party' = 'name')) %>%
filter(`Fieldwork End` >= (today() - years(1)))
filter_list <- df_polls %>% filter(`Fieldwork End` == max(`Fieldwork End`)
& result >= .05)
df_polls <- df_polls %>% filter(party %in% filter_list$party)
runApp()
library(treemap)
install.packages("treemap")
engagement_counts <- posts_raw %>%
group_by(short_name) %>%
summarize(
likes = sum(likeCount),
comments = sum(commentCount),
shares = sum(shareCount)
) %>%
ungroup() %>%
pivot_longer(cols = matches('likes|comments|shares'), names_to = "reaction", values_to = "count")
View(engagement_counts)
df_tree <- engagement_counts %>%
group_by(short_name) %>%
summarize(
count = sum(count)
)
View(df_tree)
treemap(
df_tree,
index = "short_name",
vSize = "count",
type = "index",
title = "Proportion of all engagement",
palette = "Dark2",
border.col = c("black"),
border.lwds = 1,
fontsize.labels=0.5,
fontcolor.labels="white",
fontface.labels=1,
bg.labels=c("transparent"),
align.labels=c("left", "top"),
overlap.labels=0.5,
inflate.labels=T
)
library(treemap)
treemap(
df_tree,
index = "short_name",
vSize = "count",
type = "index",
title = "Proportion of all engagement",
palette = "Dark2",
border.col = c("black"),
border.lwds = 1,
fontsize.labels=0.5,
fontcolor.labels="white",
fontface.labels=1,
bg.labels=c("transparent"),
align.labels=c("left", "top"),
overlap.labels=0.5,
inflate.labels=T
)
runApp()
g <- treemap(
df_tree,
index = "short_name",
vSize = "count",
type = "index",
title = "Proportion of all engagement",
palette = "Dark2",
border.col = c("black"),
border.lwds = 1,
fontsize.labels=0.5,
fontcolor.labels="white",
fontface.labels=1,
bg.labels=c("transparent"),
align.labels=c("left", "top"),
overlap.labels=0.5,
inflate.labels=T
)
ggplotly(g)
fig <- plot_ly(
labels = df_tree$short_name,
values = df_tree$count
)
fig
fig <- plot_ly(
type = 'treemap'
labels = df_tree$short_name,
values = df_tree$count
)
fig <- plot_ly(
type = 'treemap',
labels = df_tree$short_name,
values = df_tree$count
)
fig
fig <- plot_ly(
type = 'treemap',
labels = df_tree$short_name,
values = df_tree$count,
domain = list(column=0)
)
fig
fig <- fig %>% layout(
grid=list(columns=2, rows=1),
margin=list(l=0, r=0, b=0, t=0))
fig
fig <- plot_ly(
type = 'treemap',
labels = c(df_tree$short_name),
values = c(df_tree$count),
domain = list(column=0)
)
fig <- fig %>% layout(
grid=list(columns=2, rows=1),
margin=list(l=0, r=0, b=0, t=0))
fig
runApp()
treemap(
df_tree,
index = "short_name",
vSize = "count",
type = "index",
title = "Proportion of all engagement",
palette = "Dark2",
border.col = c("black"),
border.lwds = 1,
fontsize.labels=0.5,
fontcolor.labels="white",
fontface.labels=1,
bg.labels=c("transparent"),
align.labels=c("left", "top"),
overlap.labels=0.5,
inflate.labels=T
)
install.packages("d3Tree")
library(d3Tree)
d3tree(t)
t <- treemap(
df_tree,
index = "short_name",
vSize = "count",
type = "index",
title = "Proportion of all engagement",
palette = "Dark2",
border.col = c("black"),
border.lwds = 1,
fontsize.labels=0.5,
fontcolor.labels="white",
fontface.labels=1,
bg.labels=c("transparent"),
align.labels=c("left", "top"),
overlap.labels=0.5,
inflate.labels=T
)
d3tree(t)
t <- treemap(
df_tree,
index = "short_name",
vSize = "count",
type = "index",
title = "Proportion of all engagement",
palette = "Dark2",
border.col = c("black"),
border.lwds = 1,
fontsize.labels=0.5,
fontcolor.labels="white",
fontface.labels=1,
bg.labels=c("transparent"),
align.labels=c("left", "top"),
overlap.labels=0.5,
inflate.labels=T
)
t
d3tree(t)
d3tree(t, rootname = 'general')
d3tree(t, rootname = 'General')
t <- df2tree(
df_tree,
index = "short_name",
vSize = "count",
type = "index",
title = "Proportion of all engagement",
palette = "Dark2",
border.col = c("black"),
border.lwds = 1,
fontsize.labels=0.5,
fontcolor.labels="white",
fontface.labels=1,
bg.labels=c("transparent"),
align.labels=c("left", "top"),
overlap.labels=0.5,
inflate.labels=T
)
install.packages('d3treeR')
devtools::install_github('timelyportfolio/d3treeR')
devtools::install_github('timelyportfolio/d3treeR')
devtools::install_github('timelyportfolio/d3treeR')
devtools::install_github('timelyportfolio/d3treeR')
devtools::install_github('timelyportfolio/d3treeR')
devtools::install_github('timelyportfolio/d3treeR')
install.packages("rlang")
devtools::install_github('timelyportfolio/d3treeR')
install.packages('rlang')
devtools::install_github('timelyportfolio/d3treeR')
devtools::install_github('timelyportfolio/d3treeR')
